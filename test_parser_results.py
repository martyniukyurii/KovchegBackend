import asyncio
import sys
from pathlib import Path

# –î–æ–¥–∞—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ Python path
sys.path.append(str(Path(__file__).parent))

from system.parsers.olx_parser import OLXParser

async def test_parser_results():
    """–¢–µ—Å—Ç—É—î–º–æ —á–∏ –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å –ø–∞—Ä—Å–µ—Ä–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏"""
    
    print("üß™ –¢–µ—Å—Ç—É—î–º–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ OLX –ø–∞—Ä—Å–µ—Ä–∞...")
    
    try:
        parser = OLXParser()
        await parser.init_browser()
        
        # –¢–µ—Å—Ç—É—î–º–æ –∑ –æ–¥–Ω–∏–º URL
        test_urls = [{
            'url': 'https://www.olx.ua/nedvizhimost/kommercheskaya-nedvizhimost/chernovtsy/?currency=UAH&search%5Border%5D=created_at:desc',
            'site': 'OLX',
            'type': 'commerce'
        }]
        
        print(f"üìã –ü–∞—Ä—Å–∏–º–æ {len(test_urls)} URL...")
        
        results = await parser.parse_all_olx_urls(test_urls)
        
        print(f"‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤")
        
        if results:
            print("üéØ –ü–µ—Ä—à—ñ 3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏:")
            for i, result in enumerate(results[:3]):
                print(f"  {i+1}. {result.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∏')[:50]}...")
                print(f"     URL: {result.get('url', 'N/A')}")
                print(f"     –¢–∏–ø: {result.get('property_type', 'N/A')}")
                print()
        else:
            print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –Ω–µ–º–∞—î!")
            
        await parser.close_browser()
        
        return results
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        return []

if __name__ == "__main__":
    results = asyncio.run(test_parser_results())
    print(f"\nüìä –ó–∞–≥–∞–ª–æ–º –æ—Ç—Ä–∏–º–∞–Ω–æ: {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤") 