from fastapi import APIRouter, FastAPI, Depends
from api.jwt_handler import JWTHandler
from fastapi import Request, HTTPException, status
from api.endpoints.auth import AuthEndpoints
from api.endpoints.admin_auth import AdminAuthEndpoints
from api.endpoints.telegram_auth import TelegramAuthEndpoints
from api.endpoints.properties import PropertiesEndpoints
from api.endpoints.users import UsersEndpoints
from api.endpoints.deals import DealsEndpoints
from api.endpoints.calendar import CalendarEndpoints
from api.endpoints.documents import DocumentsEndpoints
from api.endpoints.marketing import MarketingEndpoints
from api.endpoints.analytics import AnalyticsEndpoints
from api.endpoints.user_profile import UserProfileEndpoints
from api.endpoints.parsed_listings import ParsedListingsEndpoints
from api.endpoints.smart_search import SmartSearchEndpoints
from api.endpoints.ai_assistant import AIAssistantEndpoints
from fastapi.responses import JSONResponse


class Router:
    def __init__(self, app: FastAPI):
        self.app = app

    async def initialize(self):
        """–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –≤—Å—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏"""
        print("üîß –ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ä–æ—É—Ç–µ—Ä–∞...")
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
        print("üìù –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è AuthEndpoints...")
        self.auth_handler = AuthEndpoints()
        self.admin_auth_handler = AdminAuthEndpoints()
        self.tg_auth_handler = TelegramAuthEndpoints()
        self.properties_handler = PropertiesEndpoints()
        self.users_handler = UsersEndpoints() # Changed from ClientsEndpoints to UsersEndpoints
        self.deals_handler = DealsEndpoints()
        self.calendar_handler = CalendarEndpoints()
        self.documents_handler = DocumentsEndpoints()
        self.marketing_handler = MarketingEndpoints()
        self.analytics_handler = AnalyticsEndpoints()
        self.user_profile_handler = UserProfileEndpoints()
        self.parsed_listings_handler = ParsedListingsEndpoints()
        self.smart_search_handler = SmartSearchEndpoints()
        self.ai_assistant_handler = AIAssistantEndpoints()

        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–æ—É—Ç–µ—Ä—ñ–≤
        self.auth_router = APIRouter(prefix="/auth", tags=["Authentication"])
        self.admin_auth_router = APIRouter(prefix="/admin/auth", tags=["Admin Authentication"])
        self.tg_auth_router = APIRouter(prefix="/telegram", tags=["Telegram Auth"])
        self.properties_router = APIRouter(prefix="/properties", tags=["Properties"])
        self.admins_router = APIRouter(prefix="/admins", tags=["Admins"]) # –ó–º—ñ–Ω–µ–Ω–æ –∑ admins –Ω–∞ admins
        self.users_router = APIRouter(prefix="/users", tags=["Users"])
        self.deals_router = APIRouter(prefix="/deals", tags=["Deals"])
        self.calendar_router = APIRouter(prefix="/calendar", tags=["Calendar"])
        self.documents_router = APIRouter(prefix="/documents", tags=["Documents"])
        self.marketing_router = APIRouter(prefix="/marketing", tags=["Marketing"])
        self.analytics_router = APIRouter(prefix="/analytics", tags=["Analytics"])
        self.user_profile_router = APIRouter(prefix="/profile", tags=["User Profile"])
        self.parsed_listings_router = APIRouter(prefix="/parsed-listings", tags=["Parsed Listings"])
        self.smart_search_router = APIRouter(prefix="/search", tags=["Smart Search"])
        self.ai_assistant_router = APIRouter(prefix="/ai", tags=["AI Assistant"])

        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç—ñ–≤
        await self.setup_routes()

    async def setup_routes(self):
        """–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –º–∞—Ä—à—Ä—É—Ç—ñ–≤ —É FastAPI"""

        def jwt_auth_dependency(request: Request):
            auth_header = request.headers.get("Authorization", "")
            if not auth_header.startswith("Bearer "):
                raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail="–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π")
            token = auth_header.split(" ")[1]
            payload = JWTHandler().decode_token(token)
            if not payload.get("sub"):
                raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail="–ù–µ–≤—ñ—Ä–Ω–∏–π —Ç–æ–∫–µ–Ω")
            return payload

        # Authentication routes (–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ)
        self.auth_router.post("/register", summary="–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")(self.auth_handler.register)
        self.auth_router.post("/verify-email", summary="–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è email")(self.auth_handler.verify_email)
        self.auth_router.post("/login", summary="–í—Ö—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")(self.auth_handler.login)
        self.auth_router.post("/login/oauth2", summary="–í—Ö—ñ–¥ —á–µ—Ä–µ–∑ OAuth2 (Google, Apple)")(self.auth_handler.login_oauth2)
        self.auth_router.get("/google-drive/url", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ URL –¥–ª—è OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó Google Drive")(self.auth_handler.get_google_drive_auth_url)
        self.auth_router.post("/google-drive/callback", summary="–û–±—Ä–æ–±–∫–∞ callback –≤—ñ–¥ Google OAuth")(self.auth_handler.handle_google_drive_callback)
        self.auth_router.get("/google-drive/callback-web", summary="Web callback –¥–ª—è Google OAuth")(self.auth_handler.handle_google_drive_callback_web)
        self.auth_router.post("/refresh", summary="–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞")(self.auth_handler.refresh_token)
        self.auth_router.post("/oauth2/urls", summary="–û—Ç—Ä–∏–º–∞–Ω–Ω—è OAuth2 URLs")(self.auth_handler.get_oauth2_urls)
        self.auth_router.post("/reset-password", summary="–ó–∞–ø–∏—Ç –Ω–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é")(self.auth_handler.request_password_reset)
        self.auth_router.post("/reset-password/confirm", summary="–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é")(self.auth_handler.confirm_password_reset)
        self.auth_router.post("/logout", summary="–í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏")(self.auth_handler.logout)

        # Authentication routes (–∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏)
        self.admin_auth_router.post("/login", summary="–í—Ö—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")(self.admin_auth_handler.login)
        self.admin_auth_router.post("/verify-email", summary="–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è email –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")(self.admin_auth_handler.verify_email)
        self.admin_auth_router.post("/reset-password", summary="–ó–∞–ø–∏—Ç –Ω–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")(self.admin_auth_handler.request_password_reset)
        self.admin_auth_router.post("/reset-password/confirm", summary="–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")(self.admin_auth_handler.confirm_password_reset)
        self.admin_auth_router.post("/logout", summary="–í–∏—Ö—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∑ —Å–∏—Å—Ç–µ–º–∏")(self.admin_auth_handler.logout)

        # Telegram Auth routes
        self.tg_auth_router.post("/widget/authenticate", summary="–ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —á–µ—Ä–µ–∑ Telegram Login Widget")(self.tg_auth_handler.authenticate_widget)

        # Properties routes (–¥–ª—è –≥–æ—Å—Ç–µ–π)
        self.properties_router.get("/top", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–ø–æ–≤—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó")(self.properties_handler.get_top_offers)
        self.properties_router.get("/buy", summary="–ü–æ—à—É–∫ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ –¥–ª—è –∫—É–ø—ñ–≤–ª—ñ")(self.properties_handler.search_buy)
        self.properties_router.get("/rent", summary="–ü–æ—à—É–∫ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ –¥–ª—è –æ—Ä–µ–Ω–¥–∏")(self.properties_handler.search_rent)
        self.properties_router.post("/sell", summary="–ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–æ–¥–∞–∂ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ")(self.properties_handler.submit_sell_request)
        
        # Properties routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.properties_router.get("/all", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –æ–±'—î–∫—Ç–∏ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ (–∞–¥–º—ñ–Ω)")(self.properties_handler.get_all_properties)
        self.properties_router.get("/my", summary="–ú–æ—ó –æ–±'—î–∫—Ç–∏ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ")(self.properties_handler.get_my_properties)
        self.properties_router.post("/", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ")(self.properties_handler.create_property)
        self.properties_router.get("/admin-contacts", summary="–í—Å—è –Ω–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å –∑ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –∞–¥–º—ñ–Ω—ñ–≤")(self.properties_handler.get_all_properties_with_admin_contacts)
        self.properties_router.get("/favorites", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –æ–±—Ä–∞–Ω—ñ –æ–±'—î–∫—Ç–∏")(self.properties_handler.get_favorites)
        self.properties_router.post("/favorites/{property_id}", summary="–î–æ–¥–∞—Ç–∏ –æ–±'—î–∫—Ç –¥–æ –æ–±—Ä–∞–Ω–∏—Ö")(self.properties_handler.add_to_favorites)
        self.properties_router.delete("/favorites/{property_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±'—î–∫—Ç –∑ –æ–±—Ä–∞–Ω–∏—Ö")(self.properties_handler.remove_from_favorites)
        self.properties_router.get("/{property_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –æ–±'—î–∫—Ç –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ –∑–∞ ID")(self.properties_handler.get_property)
        self.properties_router.put("/{property_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ –æ–±'—î–∫—Ç –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ")(self.properties_handler.update_property)
        self.properties_router.delete("/{property_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±'—î–∫—Ç –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ")(self.properties_handler.delete_property)

        # Admins routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.admins_router.get("/", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∞–¥–º—ñ–Ω—ñ–≤", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.get_admins)
        self.admins_router.post("/apply", summary="–ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–æ–±–æ—Ç—É –∞–¥–º—ñ–Ω–æ–º")(self.admin_auth_handler.apply_for_admin)
        self.admins_router.get("/{admin_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–¥–º—ñ–Ω–∞", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.get_admin)
        
        # Training programs routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.admins_router.get("/training-programs", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–∏ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –∞–¥–º—ñ–Ω—ñ–≤", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.get_training_programs)
        self.admins_router.get("/training-programs/{program_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –∑–∞ ID", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.get_training_program)
        self.admins_router.post("/training-programs", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.create_training_program)
        self.admins_router.put("/training-programs/{program_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.update_training_program)
        self.admins_router.delete("/training-programs/{program_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º—É –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.delete_training_program)
        self.admins_router.post("/", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–¥–º—ñ–Ω–∞", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.create_admin)
        self.admins_router.put("/{admin_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–¥–º—ñ–Ω–∞", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.update_admin)
        self.admins_router.delete("/{admin_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –∞–¥–º—ñ–Ω–∞", dependencies=[Depends(jwt_auth_dependency)])(self.admin_auth_handler.delete_admin)

        # Users routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.users_router.get("/", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")(self.users_handler.get_users)
        self.users_router.post("/", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")(self.users_handler.create_user)
        self.users_router.get("/{user_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ ID")(self.users_handler.get_user)
        self.users_router.put("/{user_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")(self.users_handler.update_user)
        self.users_router.delete("/{user_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")(self.users_handler.delete_user)

        # Deals routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.deals_router.get("/", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —É–≥–æ–¥")(self.deals_handler.get_deals)
        self.deals_router.post("/", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ —É–≥–æ–¥—É")(self.deals_handler.create_deal)
        
        # Activity Journal routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º) - –ü–ï–†–ï–î /{deal_id}
        self.deals_router.get("/activity-codes", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–¥–∏ –¥–ª—è –∂—É—Ä–Ω–∞–ª—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ")(self.deals_handler.get_activity_codes)
        self.deals_router.get("/activity-journal", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –∂—É—Ä–Ω–∞–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ")(self.deals_handler.get_activity_journal)
        self.deals_router.post("/activity-journal", summary="–î–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Å –¥–æ –∂—É—Ä–Ω–∞–ª—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ")(self.deals_handler.add_activity_journal_entry)
        self.deals_router.get("/activity-journal/{entry_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–ø–∏—Å –∂—É—Ä–Ω–∞–ª—É –∑–∞ ID")(self.deals_handler.get_activity_journal_entry)
        self.deals_router.put("/activity-journal/{entry_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ –∑–∞–ø–∏—Å –∂—É—Ä–Ω–∞–ª—É")(self.deals_handler.update_activity_journal_entry)
        self.deals_router.delete("/activity-journal/{entry_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–ø–∏—Å –∂—É—Ä–Ω–∞–ª—É")(self.deals_handler.delete_activity_journal_entry)
        
        self.deals_router.get("/{deal_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —É–≥–æ–¥—É –∑–∞ ID")(self.deals_handler.get_deal)
        self.deals_router.put("/{deal_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ —É–≥–æ–¥—É")(self.deals_handler.update_deal)
        self.deals_router.delete("/{deal_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ —É–≥–æ–¥—É")(self.deals_handler.delete_deal)

        # Calendar routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.calendar_router.get("/events", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–¥—ñ—ó –∫–∞–ª–µ–Ω–¥–∞—Ä—è")(self.calendar_handler.get_events)
        self.calendar_router.post("/events", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–¥—ñ—é –∫–∞–ª–µ–Ω–¥–∞—Ä—è")(self.calendar_handler.create_event)
        self.calendar_router.get("/events/{event_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–¥—ñ—é –∑–∞ ID")(self.calendar_handler.get_event)
        self.calendar_router.put("/events/{event_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ –ø–æ–¥—ñ—é")(self.calendar_handler.update_event)
        self.calendar_router.delete("/events/{event_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–¥—ñ—é")(self.calendar_handler.delete_event)

        # Documents routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.documents_router.get("/", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤")(self.documents_handler.get_documents)
        self.documents_router.post("/", summary="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç")(self.documents_handler.upload_document)
        
        # Document templates routes (–ú–ê–Æ–¢–¨ –ë–£–¢–ò –ü–ï–†–ï–î {document_id})
        self.documents_router.get("/templates", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —à–∞–±–ª–æ–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤")(self.documents_handler.get_document_templates)
        self.documents_router.post("/templates", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞")(self.documents_handler.create_document_template)
        self.documents_router.post("/templates/upload-docx", summary="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ .docx —à–∞–±–ª–æ–Ω –∑ –∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥–æ–º")(self.documents_handler.upload_document_template_from_file)
        self.documents_router.get("/templates/{template_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —à–∞–±–ª–æ–Ω –∑–∞ ID")(self.documents_handler.get_template)
        self.documents_router.put("/templates/{template_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞")(self.documents_handler.update_document_template)
        self.documents_router.delete("/templates/{template_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞")(self.documents_handler.delete_document_template)
        self.documents_router.post("/templates/{template_id}/generate", summary="–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç –∑ —à–∞–±–ª–æ–Ω–∞")(self.documents_handler.generate_document_from_template)
        self.documents_router.post("/templates/{template_id}/generate-docx", summary="–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ .docx –¥–æ–∫—É–º–µ–Ω—Ç –∑ —à–∞–±–ª–æ–Ω–∞")(self.documents_handler.generate_docx_from_template)
        
        self.documents_router.get("/{document_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç –∑–∞ ID")(self.documents_handler.get_document)
        self.documents_router.put("/{document_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç")(self.documents_handler.update_document)
        self.documents_router.delete("/{document_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç")(self.documents_handler.delete_document)

        # Marketing routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.marketing_router.get("/campaigns", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ñ –∫–∞–º–ø–∞–Ω—ñ—ó")(self.marketing_handler.get_campaigns)
        self.marketing_router.post("/campaigns", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—É –∫–∞–º–ø–∞–Ω—ñ—é")(self.marketing_handler.create_campaign)
        self.marketing_router.get("/campaigns/{campaign_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞–º–ø–∞–Ω—ñ—é –∑–∞ ID")(self.marketing_handler.get_campaign)
        self.marketing_router.put("/campaigns/{campaign_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ –∫–∞–º–ø–∞–Ω—ñ—é")(self.marketing_handler.update_campaign)
        self.marketing_router.delete("/campaigns/{campaign_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –∫–∞–º–ø–∞–Ω—ñ—é")(self.marketing_handler.delete_campaign)
        
        # Leads routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.marketing_router.get("/leads", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –ª—ñ–¥–∏")(self.marketing_handler.get_leads)
        self.marketing_router.post("/leads", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ –ª—ñ–¥")(self.marketing_handler.create_lead)
        self.marketing_router.get("/leads/{lead_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –ª—ñ–¥ –∑–∞ ID")(self.marketing_handler.get_lead)
        self.marketing_router.put("/leads/{lead_id}", summary="–û–Ω–æ–≤–∏—Ç–∏ –ª—ñ–¥")(self.marketing_handler.update_lead)
        self.marketing_router.delete("/leads/{lead_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –ª—ñ–¥")(self.marketing_handler.delete_lead)

        # Analytics routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.analytics_router.get("/dashboard", summary="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞")(self.analytics_handler.get_dashboard_stats)
        self.analytics_router.get("/sales-report", summary="–ó–≤—ñ—Ç –∑ –ø—Ä–æ–¥–∞–∂—ñ–≤")(self.analytics_handler.get_sales_report)
        self.analytics_router.get("/properties", summary="–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ")(self.analytics_handler.get_properties_analytics)
        self.analytics_router.get("/marketing", summary="–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞ –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞")(self.analytics_handler.get_marketing_analytics)
        self.analytics_router.get("/admins-performance", summary="–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –∞–¥–º—ñ–Ω—ñ–≤")(self.analytics_handler.get_admins_performance)
        self.analytics_router.get("/export-report", summary="–ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑–≤—ñ—Ç")(self.analytics_handler.export_report)

        # User Profile routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.user_profile_router.get("/", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")(self.user_profile_handler.get_profile)
        self.user_profile_router.put("/", summary="–û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")(self.user_profile_handler.update_profile)
        self.user_profile_router.post("/change-password", summary="–ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å")(self.user_profile_handler.change_password)
        self.user_profile_router.delete("/", summary="–í–∏–¥–∞–ª–∏—Ç–∏ –∞–∫–∞—É–Ω—Ç")(self.user_profile_handler.delete_account)
        
        # Communications routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.user_profile_router.get("/communications", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó")(self.user_profile_handler.get_communications)
        self.user_profile_router.post("/communications", summary="–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—é")(self.user_profile_handler.send_communication)
        self.user_profile_router.put("/communications/{communication_id}/read", summary="–ü–æ–∑–Ω–∞—á–∏—Ç–∏ –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—é —è–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω—É")(self.user_profile_handler.mark_communication_as_read)
        
        # Notifications routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.user_profile_router.get("/notifications", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è")(self.user_profile_handler.get_notifications)
        self.user_profile_router.put("/notifications/{notification_id}/read", summary="–ü–æ–∑–Ω–∞—á–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —è–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–µ")(self.user_profile_handler.mark_notification_as_read)
        self.user_profile_router.put("/notifications/read-all", summary="–ü–æ–∑–Ω–∞—á–∏—Ç–∏ –≤—Å—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —è–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω—ñ")(self.user_profile_handler.mark_all_notifications_as_read)

        # Parsed Listings routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.parsed_listings_router.get("/", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∞—Ä—Å–µ–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è")(self.parsed_listings_handler.get_parsed_listings)
        self.parsed_listings_router.get("/{listing_id}", summary="–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∞—Ä—Å–µ–Ω–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–∞ ID")(self.parsed_listings_handler.get_parsed_listing)
        self.parsed_listings_router.post("/", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ —Å–ø–∞—Ä—Å–µ–Ω–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è")(self.parsed_listings_handler.create_parsed_listing)
        self.parsed_listings_router.post("/{listing_id}/convert", summary="–ö–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤ –æ–±'—î–∫—Ç –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ")(self.parsed_listings_handler.convert_to_property)
        self.parsed_listings_router.delete("/{listing_id}", summary="–í–∏–¥–∞–ª–∏—Ç–∏ —Å–ø–∞—Ä—Å–µ–Ω–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è")(self.parsed_listings_handler.delete_parsed_listing)

        # Smart Search routes (–ø—É–±–ª—ñ—á–Ω—ñ)
        self.smart_search_router.get("/", summary="–†–æ–∑—É–º–Ω–∏–π –ø–æ—à—É–∫ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ")(self.smart_search_handler.smart_search)
        self.smart_search_router.post("/embeddings/create", summary="–°—Ç–≤–æ—Ä–∏—Ç–∏ –≤–µ–∫—Ç–æ—Ä–Ω—ñ –µ–º–±–µ–¥–∏–Ω–≥–∏")(self.smart_search_handler.create_embeddings)

        # AI Assistant routes (–∑ JWT —Ç–æ–∫–µ–Ω–æ–º)
        self.ai_assistant_router.get("/property/{property_id}/matches", summary="AI –∞–Ω–∞–ª—ñ–∑: —Ç–æ–ø –∫–ª—ñ—î–Ω—Ç—ñ–≤ –¥–ª—è –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ")(self.ai_assistant_handler.get_property_client_matches)
        self.ai_assistant_router.get("/daily-tasks", summary="–û—Ç—Ä–∏–º–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏—Ö –∑–∞–¥–∞—á –∞–¥–º—ñ–Ω–∞")(self.ai_assistant_handler.get_daily_admin_tasks)
        self.ai_assistant_router.put("/admin/{admin_id}/tasks/{date}", summary="–û–Ω–æ–≤–ª–µ–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–∏—Ö –∑–∞–¥–∞—á –∞–¥–º—ñ–Ω–∞")(self.ai_assistant_handler.update_daily_tasks)
        self.ai_assistant_router.post("/admin/bulk-generate-tasks", summary="–ú–∞—Å–æ–≤–µ –≥–µ–Ω–µ—Ä—É–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á –¥–ª—è –≤—Å—ñ—Ö –∞–¥–º—ñ–Ω—ñ–≤")(self.ai_assistant_handler.bulk_generate_daily_tasks)
        self.ai_assistant_router.delete("/admin/cleanup-expired-tasks", summary="–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö –∑–∞–¥–∞—á (3+ –º—ñ—Å—è—Ü—ñ)")(self.ai_assistant_handler.cleanup_expired_tasks)
        
        # –¢–µ—Å—Ç–æ–≤—ñ endpoints –≤–∏–¥–∞–ª–µ–Ω—ñ

        # –î–æ–¥–∞—î–º–æ —Ä–æ—É—Ç–µ—Ä–∏ –≤ FastAPI –¥–æ–¥–∞—Å—Ç—å /kovcheg/)
        self.app.include_router(self.auth_router)
        self.app.include_router(self.admin_auth_router)
        self.app.include_router(self.tg_auth_router)
        self.app.include_router(self.properties_router)
        self.app.include_router(self.admins_router) # –ó–º—ñ–Ω–µ–Ω–æ –∑ admins_router –Ω–∞ admins_router
        self.app.include_router(self.users_router)
        self.app.include_router(self.deals_router)
        self.app.include_router(self.calendar_router)
        self.app.include_router(self.documents_router)
        self.app.include_router(self.marketing_router)
        self.app.include_router(self.analytics_router)
        self.app.include_router(self.user_profile_router)
        self.app.include_router(self.parsed_listings_router)
        self.app.include_router(self.smart_search_router)
        self.app.include_router(self.ai_assistant_router)
        
    # –¢–µ—Å—Ç–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏–¥–∞–ª–µ–Ω—ñ
        
    async def handle_options_login(self):
        """–û–±—Ä–æ–±–Ω–∏–∫ OPTIONS –∑–∞–ø–∏—Ç—ñ–≤ –¥–ª—è /auth/login"""
        return JSONResponse(
            content={},
            status_code=200,
            headers={
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Methods": "POST, OPTIONS",
                "Access-Control-Allow-Headers": "Content-Type, Authorization",
                "Access-Control-Max-Age": "600",
            }
        )
